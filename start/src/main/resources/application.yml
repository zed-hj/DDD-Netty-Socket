netty:
  kafka:
    enabled: true
  rocket:
    enabled: true

disruptor:
  async:
    corePoolSize: 10
  ringbuffer:
    bufferSize: 2048
    consumers: 10


###########【Kafka集群】###########
spring:
  application:
    name: netty-socket
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    ###########【初始化生产者配置】###########
    # 重试次数
    producer:
      retries: 0
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # 批量大小
      batch-size: 16384
      # 提交延时
      properties:
        linger:
          ms: 0
      # 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
      # linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
      # 生产端缓冲区大小
      buffer-memory: 33554432
      # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

########### 【RocketMQ】###########
rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    group: ${spring.application.name}